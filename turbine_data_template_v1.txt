##############################################################################################################################################################################
# Tutorial on data entry methology:

# Python operators can be used at each definition in geometry definition part, always following the proposed order.
# Each variable must be followed by an equal symbol and continue with the assigned value.
# Each pair variable-definition must be followed by a semicolon.
# When the read stream reaches "#" it jumps to the next line.
# When defining a variable does not apply, it must be assigned "None".
# Space character is ignored, therefore, when using list-comprehension, it needs to be indicated by "$".
# Units of variables to be entered must be: Kelvin, Pascals, degrees, meters/seconds.
##############################################################################################################################################################################
# First of all, it is defined the action to be executed or mode, using double or simple quotation marks.

# To be chosen between: 'process_nominal_values', 'solve', 'display_values', 'sweep_variable' and 'display_graphs_with_sweep_data'.
mode = 'sweep_variable';

# Additional information for 'sweep variable' and 'display_graphs_with_sweep_data' modes:
var_to_sweep = 'p_inlet';    sweep_resolution = 400;    req_vars = None;   csv_filename_extension = 'sweeping_240623_v2.csv';
independent_variable = 'r_turbine';      dependent_variables = ['C', 'm_dot', 'eta_ss', 'P_total', 'P_total_ss', 'alfa', 'eta_TT', 'eta_TE'];
logic_limit_for_independent_variable = True;  # It limits the displayed values using as condition that global energy exchange is from the gas to the turbine.

# Any dependend and non dependend variable whose value depends on axial direction or on the step evaluated has to be added to the dictionary at the next line.
# Notice that it is not possible to have repeated keys in the dictionary and values need to be listed as follows.
# When last sentence applies to independent variable, it must be indicated the first one.
where_to_evaluate = {'C': {'step': [1, 1], 'point': [1, 3]}, 'alfa': {'step': [1, 1], 'point': [1, 3]}, 'eta_TT': {'step': 1}, 'eta_TE': {'step': 1}};

# In case it is necessary to plot any dependent variables together, all of them must be packaged as follows.
# In case variables that share a key are indicated, all previously chosen variables sharing the key will be represented together.
plot_together = [['C'],['alfa'], ['eta_TT', 'eta_TE'], ['P_total', 'P_total_ss']];
##############################################################################################################################################################################
# Secondly, everything about the program configuration is defined:

iter_limit_at_inner_loops=800;                     iter_limit_at_outer_loops=25;                       thermod_mode_in_gas_model_module = 'ig';
relative_error=1E-8;         ideal_gas=True;       chain_mode=False;        loss_model='Aungier';      n_steps=2;           jump=4.0;   
max_trend_changes=30;        T_nominal=750;        p_nominal=150_000;       n_rpm_nominal=20_000;      inlet_velocity_range=[0.01, 140.69];
preloading_for_small_input_deviations = False;     resolution_for_small_input_deviations = 500; 

# preloading_for_small_input_deviations: if true, there will be done several evaluations, in order to being able to approximate the solution directly when in 'solve' mode.
##############################################################################################################################################################################
# The geometry is then defined with all the necessary parameters, depending on the loss model used.
# More information on the variables to be defined can be found in the code documentation.

stator_leading_edge_angle = 0;                              rotor_leading_edge_angle = 55;                                stator_blade_curvature = 70;
rotor_blade_curvature = 105;                                stator_trailing_edge_angle = None;                            rotor_trailing_edge_angle = None;
hub_radius = 0.1;                                           tip_radius = 0.186;                                           mean_radius = 0.1429;
heights = [0.0445, 0.0445, 0.0445];                         areas = None;                                                 chord = [0.0338, 0.0241];
maximum_thickness = [0.2*chord[0], 0.15*chord[1]];          pitch = [0.0249, 0.0196];                                     outlet_thickness = $[0.01*s for s in pitch];
blade_opening = [0.01090, 0.01354];                         blade_mean_radius_of_curvature = [0.0893, 0.01135];           tip_clearance = [0.0004, 0.0008];
chord_z = $[0.9 * b for b in chord];                        wire_diameter = None;                                         lashing_wires = None;
radial_clearance = False;                                   blade_roughness_peak_to_valley = $[0.00001 for _ in chord];   design_factor = 0.67;
##############################################################################################################################################################################
# Finally, only the values that will restrict the operating point to be evaluated are defined, the rest are assigned "None":

T_inlet=800;      p_inlet=[655_000, 850_000];      rpm=10_000;      p_outlet=650_000;      mass_flow=None;      axial_inlet_velocity=None;      reference_inlet_velocity=20;
##############################################################################################################################################################################